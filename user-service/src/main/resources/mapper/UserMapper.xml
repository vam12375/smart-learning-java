<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartlearning.user.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.smartlearning.user.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="TINYINT"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, username, email, phone, password, nickname, avatar_url, gender, birthday,
        role, status, last_login_time, last_login_ip, create_time, update_time, deleted
    </sql>

    <!-- 根据用户名或邮箱查询用户 -->
    <select id="findByUsernameOrEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE deleted = 0
        AND (username = #{username} OR email = #{email})
        LIMIT 1
    </select>

    <!-- 更新最后登录信息 -->
    <update id="updateLastLoginInfo">
        UPDATE users
        SET last_login_time = #{loginTime},
            last_login_ip = #{loginIp},
            update_time = NOW()
        WHERE id = #{userId}
        AND deleted = 0
    </update>

    <!-- 根据用户名查询用户数量 -->
    <select id="countByUsername" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM users
        WHERE username = #{username}
        AND deleted = 0
    </select>

    <!-- 根据邮箱查询用户数量 -->
    <select id="countByEmail" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM users
        WHERE email = #{email}
        AND deleted = 0
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="findByPhone" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE phone = #{phone}
        AND deleted = 0
        LIMIT 1
    </select>

    <!-- 批量查询用户基本信息 -->
    <select id="findUsersByIds" resultMap="BaseResultMap">
        SELECT
        id, username, nickname, avatar_url, role, status, create_time
        FROM users
        WHERE deleted = 0
        AND id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <!-- 根据角色查询用户列表 -->
    <select id="findUsersByRole" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE role = #{role}
        AND status = 1
        AND deleted = 0
        ORDER BY create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 查询活跃用户统计 -->
    <select id="countActiveUsers" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM users
        WHERE status = 1
        AND deleted = 0
        <if test="startTime != null">
            AND last_login_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND last_login_time &lt;= #{endTime}
        </if>
    </select>

    <!-- 更新用户状态 -->
    <update id="updateUserStatus">
        UPDATE users
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{userId}
        AND deleted = 0
    </update>

    <!-- 重置用户密码 -->
    <update id="resetPassword">
        UPDATE users
        SET password = #{newPassword},
            update_time = NOW()
        WHERE id = #{userId}
        AND deleted = 0
    </update>

    <!-- 更新用户头像 -->
    <update id="updateAvatar">
        UPDATE users
        SET avatar_url = #{avatarUrl},
            update_time = NOW()
        WHERE id = #{userId}
        AND deleted = 0
    </update>

    <!-- 软删除用户 -->
    <update id="softDeleteUser">
        UPDATE users
        SET deleted = 1,
            update_time = NOW()
        WHERE id = #{userId}
        AND deleted = 0
    </update>

</mapper>
